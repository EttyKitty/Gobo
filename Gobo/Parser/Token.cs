namespace Gobo.Parser;

internal struct Token
{
    public string Text { get; init; }
    public TokenKind Kind { get; init; }
    public int Line { get; init; }
    public int Column { get; init; }
    public int StartIndex { get; init; }
    public int EndIndex { get; init; }
}

internal enum TokenKind
{
    SingleLineComment,
    MultiLineComment,
    OpenBracket,
    ListAccessor,
    MapAccessor,
    GridAccessor,
    ArrayAccessor,
    StructAccessor,
    CloseBracket,
    OpenParen,
    CloseParen,
    OpenBrace,
    CloseBrace,
    SemiColon,
    Comma,
    Assign,
    Colon,
    Dot,
    PlusPlus,
    MinusMinus,
    Plus,
    Minus,
    BitNot,
    Not,
    Multiply,
    Divide,
    IntegerDivide,
    Modulo,
    Power,
    QuestionMark,
    NullCoalesce,
    NullCoalescingAssign,
    RightShiftArithmetic,
    LeftShiftArithmetic,
    LessThan,
    GreaterThan,
    LessThanEquals,
    GreaterThanEquals,
    Equals_,
    NotEquals,
    BitAnd,
    BitXor,
    BitOr,
    And,
    Or,
    Xor,
    MultiplyAssign,
    DivideAssign,
    PlusAssign,
    MinusAssign,
    ModulusAssign,
    LeftShiftArithmeticAssign,
    RightShiftArithmeticAssign,
    BitAndAssign,
    BitXorAssign,
    BitOrAssign,
    NumberSign,
    DollarSign,
    AtSign,
    Identifier,
    BooleanLiteral,
    IntegerLiteral,
    DecimalLiteral,
    BinaryLiteral,
    HexIntegerLiteral,
    StringLiteral,
    VerbatimStringLiteral,
    Undefined,
    Noone,
    Break,
    Exit,
    Do,
    Case,
    Else,
    New,
    Var,
    GlobalVar,
    Catch,
    Finally,
    Return,
    Continue,
    For,
    Switch,
    While,
    Until,
    Repeat,
    Function,
    With,
    Default,
    If,
    Then,
    Throw,
    Delete,
    Try,
    Enum,
    Constructor,
    Static,
    Macro,
    Define,
    Region,
    EndRegion,
    EscapedNewLine,
    TemplateStringStart,
    TemplateStringEnd,
    TemplateExpressionStart,
    TemplateExpressionEnd,
    TemplateText,
    LineBreak,
    WhiteSpace,
    Eof,
    UnexpectedCharacter,
}
