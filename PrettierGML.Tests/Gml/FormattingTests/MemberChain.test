self.do_something().do_something_else();

self.do_something()
    .do_something()
    .do_something();

longer_identifier
    .do_something()
    .do_something()
    .do_something();

self.method(
    some_parameter__________________________________,
    some_parameter__________________________________
);

self.some_method(
    some_other_method(parameter__________________________________________________)
);

var super_long_name____________________________________ =
    other_name.call_method________________();

var super_long_name_______________ = other_name____________
    .call_some_method______________()
    .call_some_method______________();

var super_long_name_______________ = other_name____________  // c1
    .get_some_property______________
    // c2
    .call_some_method______________()
    /* comment */
    .get_some_property______________; // c3

var some_value = this().should().be().one().line()

return some_condition
    ? call_method(
        some_long_parameter____________________________,
        some_long_parameter____________________________
    )
    : something.call_method(
        some_long_parameter____________________________,
        some_long_parameter____________________________
    );

return some_value.call_method
(
    some_long_parameter____________________________,
    some_long_parameter____________________________
)
.xyz;

var some_variable = some_object
    .property
    .call_method(
        something.some_property == some_other_value___________________________________
    );

call_method(
        first_parameter____________________________,
        second_parameter___________________________
    )
    .call_method(
        first_parameter____________________________,
        second_parameter___________________________
    );

call_method( // c1
        first_parameter____________________________, // c2
        second_parameter___________________________ // c3
    ) // c4
    // c5
    .call_method(
        first_parameter____________________________,
        second_parameter___________________________
    )
    .call_method(
        first_parameter____________________________,
        second_parameter___________________________
    );

someThing_______________________
    .Property
    .CallMethod__________________()
    .CallMethod__________________();

// shoutouts to meseta
CLIENTS
.items
.reduce_user_items(
    _player_id,
    _items_check,
    "player_death",
    this.session_id
)
.chain_callback(method({this: this, player_id: _player_id}, function() {
    this.parent_components.send_action_to_player(
        player_id,
        "notify_ring_of_life"
    );
}))
.on_error(method({this: this, player_id: _player_id}, function(_err) {
    // reduce will fail if player doesn't have item
    LOGGER.info // reduce will fail if player doesn't have item
    ("Wiping bag for player:", {player_id: player_id});
    CLIENTS.items.delete_all_items_in_equipped_bag(player_id);
    // Quest flag death flag
    CLIENTS
        .quests
        .set_quest_flag // Quest flag death flag
        (player_id, "player_has_died_dc");
    this.parent_components.send_action_to_player(
        player_id,
        "notify_bag_wipe"
    );
}));